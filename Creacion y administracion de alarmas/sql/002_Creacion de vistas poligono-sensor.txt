/*
Descripcion: 	Creacion de vistas para identificar que sensores etan en cada poligonos
Fecha: 			12/02/2016
Autor: 			Arnol García
Tipo de sql: 	Creacion
Objetos:		- poligono.v_poligono_sensor
				- poligono.v_poligono_sensor_detalle

*/

-- Eliminar vistas si ya existen
DROP VIEW IF EXISTS poligonos.v_poligono_sensor_detalle;
DROP VIEW IF EXISTS poligonos.v_poligono_sensor;

-- Crear vista v_poligono_sensor
-- Despues hay que cambiar esta vista a tabla
CREATE VIEW poligonos.v_poligono_sensor AS(
	-- Calcula poligonos que intersectan con data de squeesar
	SELECT
		table2.id poligono_id,
		3 sensores_id
	FROM
		"squeesar"."historico_squeesar_6" table1
	INNER JOIN 
		"poligonos"."poligono" table2
	ON
		ST_Intersects (table1.geom, table2.geom	)
	WHERE
		ST_isvalid (table1.geom) = 't' AND 
		ST_isvalid (table2.geom) = 't'
	GROUP BY
		table2.id

	UNION

	-- Calcula poligonos que intersecta con data de prismas
	SELECT
		table2.id poligono_id,
		1 sensores_id
	FROM
		"prismas"."cons_alarma_prisma" table1
	INNER JOIN 
		"poligonos"."poligono" table2
	ON 
		ST_Intersects (table1.geom, table2.geom	)
	WHERE
		ST_isvalid (table1.geom) = 't' AND 
		ST_isvalid (table2.geom) = 't'
	GROUP BY
		table2.id
)
;

-- Crear vista v_poligono_sensor_detalle
CREATE VIEW poligonos.v_poligono_sensor_detalle AS (
	SELECT
		t1.poligono_id,
		t1.sensores_id,
		t2.nombre_sensor,
		t2.descripcion
	FROM
		"poligonos"."v_poligono_sensor" t1
	INNER JOIN
		sensor.sensores t2
	ON (t1.id_sensor=t2."id")
	ORDER BY
		t1.id_poligono,
		t1.id_sensor
)
;