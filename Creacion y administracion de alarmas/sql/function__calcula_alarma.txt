/*
-- Descripcion	: Crea la funcion 'calcula_alarma'
-- Objetos		: -alarmas.calcula_alarma
				  
-- Autor		: Arnol Garc√≠a
-- Fecha		: 16-02-2016

*/


DROP FUNCTION 
IF EXISTS alarmas.calcula_alarma (alarma_id$ int8);

CREATE OR REPLACE FUNCTION alarmas.calcula_alarma (alarma_id$ int8)
RETURNS TABLE (
	alarma_id int4,
	poligono_id int4,
	nro_elementos int8,
	fecha timestamp, 
	valor_campo float8, 
	genera_alerta BOOLEAN) AS

$BODY$

	-- Declarar variables locales
	DECLARE
	sQuery$ VARCHAR;
	poligono_id$ int8;
	tabla_datos$ VARCHAR;
	campo$ VARCHAR;
	condicion_alarma$ VARCHAR;
	tabla_interseccion$ VARCHAR;
	tipo_sensor$ VARCHAR(100);
	

	BEGIN
		-- Definir variables locales
		SELECT
			t1.poligono_id,
			t1.tabla_datos,
			t1.campo,
			t1.condicion_alarma,
			t1.tabla_interseccion,
			t1.tipo_sensor
		INTO
			poligono_id$,
			tabla_datos$,
			campo$,
			condicion_alarma$,
			tabla_interseccion$,
			tipo_sensor$
		FROM 
			alarmas.v_condicion_alarmas t1
		WHERE
			t1.alarma_id = alarma_id$;
			

		-- String con la query a ejecutar
		sQuery$ =  'WITH B AS
						(
							SELECT
								' || alarma_id$ || ' AS alarma_id,
								' || poligono_id$ || ' AS poligono_id,
								COUNT(tabla_interseccion.' || tipo_sensor$ || '_id) AS nro_elementos,
								tabla_datos.fecha AS fecha,
								AVG(tabla_datos.' || campo$ || ') AS valor_campo,
								(CASE 	
									WHEN ' || condicion_alarma$ || ' 
										THEN ''t''
									ELSE ''f''
								END)::BOOLEAN AS genera_alerta
							FROM
								' || tabla_datos$ || ' tabla_datos
							INNER JOIN 
								' || tabla_interseccion$ || ' tabla_interseccion
							ON (
								tabla_interseccion.poligono_id = ' || poligono_id$ || ' AND
								tabla_datos.prisma_id = tabla_interseccion.' || tipo_sensor$ || '_id
							)
							GROUP BY
								tabla_datos.fecha
						)

					SELECT * FROM B
					;';

		-- Retornar resultado de la query
		RETURN QUERY EXECUTE sQuery$;
	END;

$BODY$
  LANGUAGE 'plpgsql' VOLATILE;
ALTER FUNCTION alarmas.calcula_alarma (alarma_id$ int8) OWNER TO postgres;